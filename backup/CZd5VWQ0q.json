{"_id":"note:CZd5VWQ0q","title":"Datastructure notes","content":"## Objects\n\n### Object Operation\n\nInsertion -   O(1)\n\nRemoval -   O(1)\n\nSearching -   O(N)\n\nAccess -   O(1)\n\nWhen you don't need any ordering, objects are an excellent choice!\n\n\n### Object Methods\n\n*Below methods are doing linear search*\n\nObject.keys -   O(N)\n\nObject.values -   O(N)\n\nObject.entries -   O(N)\n\nhasOwnProperty -   O(1) // since accessing a single value is constant\n\n\n## Arrays\n\n### Array Operations\n\n* Insertion -   It depends.... ** as re-indexing is required\n\n* Removal -   It depends.... ** as re-indexing is required\n\n* Searching -   O(N)\n\n* Access -   O(1)\n\n### Array Methods\n* push *(insert element at end)* -   O(1)\n\n* pop *(delete element at end)* -   O(1)\n\n* shift *(insert element at start)* -   O(N)\n\n* unshift *(delete element at start)* -   O(N)\n\n* concat *(merge two arrays)*-   O(N)\n\n* slice *(make copy of array)*-   O(N)\n\n* splice *(delete element from anywhere)* -   O(N)\n\n* sort *-   O(N * log N)\n\n* forEach/map/filter/reduce/etc. -   O(N)","tags":[],"folderPathname":"/","data":{},"createdAt":"2020-10-13T13:11:57.164Z","updatedAt":"2020-10-13T13:43:00.597Z","trashed":false,"_rev":"En8mJemEQ"}